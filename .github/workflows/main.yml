name: Build & Publish Resume

on:
  push:
    branches: [ main ]
    paths:
      - "resume_faangpath.tex"
      - "resume.cls"
      - ".github/workflows/**"
  pull_request:
    paths:
      - "resume_faangpath.tex"
      - "resume.cls"
      - ".github/workflows/**"
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write
  pull-requests: write   # needed to comment PR preview link

env:
  ROOT_TEX: resume_faangpath.tex
  OUT_DIR: build

jobs:
  build:
    name: Compile LaTeX (with cache)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 1) Faster builds: cache TeX packages (built-in to latex-action v3)
      - name: Compile PDF with latexmk (xelatex)
        uses: xu-cheng/latex-action@v3
        with:
          root_file: ${{ env.ROOT_TEX }}
          latexmk_use_xelatex: true
          work_in_root_file_dir: true
          continue_on_error: false
          extra_system_packages: "fontconfig"
          cache: true  # <-- enables TeX Live package caching

      - name: Prepare output
        run: |
          mkdir -p "$OUT_DIR"
          PDF="${ROOT_TEX%.tex}.pdf"
          test -f "$PDF" || (echo "Expected $PDF not found" && exit 1)
          cp "$PDF" "$OUT_DIR/resume.pdf"

      - name: Upload PDF artifact
        uses: actions/upload-artifact@v4
        with:
          name: resume-pdf
          path: ${{ env.OUT_DIR }}/resume.pdf
          if-no-files-found: error
          retention-days: 30

      # 2) Pages UX: nicer index, cache-busting, robots + 404, .nojekyll
      - name: Create site files
        run: |
          cat > "$OUT_DIR/index.html" <<'HTML'
          <!doctype html>
          <meta charset="utf-8">
          <meta name="viewport" content="width=device-width, initial-scale=1">
          <title>Resume</title>
          <meta name="description" content="One-page resume PDF">
          <meta property="og:title" content="Resume">
          <meta property="og:description" content="Download or view the latest resume.pdf">
          <meta property="og:type" content="website">
          <style>
            :root{--w:820px}
            body{font-family:system-ui,-apple-system,Segoe UI,Roboto,Ubuntu,Arial,sans-serif;max-width:var(--w);margin:48px auto;padding:0 16px;line-height:1.6}
            header{display:flex;justify-content:space-between;align-items:center;gap:16px;flex-wrap:wrap}
            .btn{display:inline-block;padding:.6rem 1rem;border:1px solid #ddd;border-radius:12px;text-decoration:none}
            iframe{border:1px solid #ddd;border-radius:12px;width:100%;height:900px}
            footer{margin-top:28px;font-size:.9rem;color:#666}
          </style>
          <header>
            <h1>Resume</h1>
            <nav>
              <a class="btn" id="dl" href="#">Download PDF</a>
            </nav>
          </header>
          <p>This is the latest build from GitHub Actions.</p>
          <iframe id="viewer" src="" loading="lazy"></iframe>
          <footer>
            <p>Having trouble seeing updates? This page auto busts cache using the build SHA.</p>
          </footer>
          <script>
            // cache-bust so viewers always see the newest PDF
            const sha = new URLSearchParams(location.search).get("v") || "{{SHA}}";
            const pdf = `resume.pdf?v=${sha}`;
            document.getElementById('viewer').src = pdf;
            document.getElementById('dl').href = pdf;
          </script>
          HTML

          # 404 for nicer broken-link handling
          cat > "$OUT_DIR/404.html" <<'HTML'
          <!doctype html><meta charset="utf-8"><title>Not found</title>
          <style>body{font-family:system-ui;max-width:680px;margin:64px auto;padding:0 16px;line-height:1.6}</style>
          <h1>404</h1><p>Page not found. Try <a href="/">home</a>.</p>
          HTML

          # Search indexing preference (edit if you want noindex)
          cat > "$OUT_DIR/robots.txt" <<'TXT'
          User-agent: *
          Allow: /
          TXT

          # Disable Jekyll processing
          touch "$OUT_DIR/.nojekyll"

          # Fill in {{SHA}} placeholder
          sed -i "s/{{SHA}}/${GITHUB_SHA}/g" "$OUT_DIR/index.html"

      - name: Upload Pages artifact
        if: github.event_name == 'push' && github.ref_name == 'main'
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.OUT_DIR }}

  # 3) PR Preview: comment direct link to this run's artifacts page
  pr-preview:
    name: PR preview comment
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Comment PR with preview link
        uses: actions/github-script@v7
        with:
          script: |
            const runUrl = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;
            const body = [
              "### ðŸ“„ Resume preview",
              "- Build completed and the PDF is attached as an artifact named **`resume-pdf`**.",
              `- **Download:** ${runUrl} (Artifacts section at the bottom)`,
              "",
              "> Note: Artifact downloads require GitHub login."
            ].join("\n");
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body
            });

  deploy:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref_name == 'main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4
