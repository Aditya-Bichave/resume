name: ATS Pro (Strict)

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "resume*.tex"
      - "resume*.pdf"
      - "resume*.cls"
      - ".github/workflows/**"
      # JD is read from main, so PR changes to JD won't retrigger;
      # if you want JD edits to retrigger, add `job-description.txt` here
      # - "job-description.txt"

  # OPTIONAL: also run on pushes to main (post-merge sanity)
  # push:
  #   branches: [ main ]
  #   paths:
  #     - "resume*.tex"
  #     - "resume*.pdf"
  #     - "resume*.cls"
  #     - ".github/workflows/**"
  #     - "job-description.txt"

permissions:
  contents: read
  pull-requests: write

env:
  ROOT_TEX: resume_faangpath.tex
  REPORT_JSON: ats-pro-report.json
  REPORT_MD: ats-pro-report.md
  ROLE_FILE: ci/ats-pro/roles/backend-java.json   # lives on gh_pages
  MIN_SCORE: "78"
  MIN_REQUIRED_SKILLS_COVERAGE: "0.85"

concurrency:
  group: ats-pro-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  ats-pro:
    runs-on: ubuntu-latest

    steps:
      # 1) PR branch (your resume/source)
      - name: Checkout PR branch
        uses: actions/checkout@v4

      # 2) gh_pages (ATS code)
      - name: Checkout gh_pages (ATS code)
        uses: actions/checkout@v4
        with:
          ref: gh_pages
          path: ops

      # 3) main branch (ONLY job-description.txt)
      - name: Checkout main (job-description.txt)
        uses: actions/checkout@v4
        with:
          ref: main
          path: jd
          sparse-checkout: |
            job-description.txt
          sparse-checkout-cone: true

      - name: Cache pip + HF models
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.cache/huggingface
          key: ${{ runner.os }}-atspro-${{ hashFiles('ops/ci/ats-pro/requirements.txt') }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r ops/ci/ats-pro/requirements.txt
          python - <<'PY'
import nltk; nltk.download('punkt', quiet=True)
PY

      - name: Compile PDF (what ATS sees)
        uses: xu-cheng/latex-action@v3
        with:
          root_file: ${{ env.ROOT_TEX }}

      - name: Run ATS Pro strict analysis
        id: ats
        shell: bash
        continue-on-error: true   # still post comment if it fails gates
        run: |
          python ops/ci/ats-pro/ats_pro.py \
            --pdf "${{ env.ROOT_TEX }}".pdf \
            --tex "${{ env.ROOT_TEX }}" \
            --jd  "jd/job-description.txt" \
            --role "ops/${{ env.ROLE_FILE }}" \
            --out-json "${{ env.REPORT_JSON }}" \
            --out-md   "${{ env.REPORT_MD }}" \
            --min-score "${{ env.MIN_SCORE }}" \
            --min-req-coverage "${{ env.MIN_REQUIRED_SKILLS_COVERAGE }}"

      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: ats-pro-report
          path: |
            ${{ env.REPORT_JSON }}
            ${{ env.REPORT_MD }}
          retention-days: 7

      - name: Find prior ATS comment
        id: find-comment
        uses: peter-evans/find-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: 'ATS Pro Report (Strict)'

      - name: Create or update PR comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body-path: ${{ env.REPORT_MD }}
          edit-mode: replace
        continue-on-error: true  # handles forked PR permission limits

      - name: Fail the job if analysis failed
        if: steps.ats.outcome == 'failure'
        run: |
          echo "ATS Pro gate/score failed (see comment & artifact)."
          exit 1
