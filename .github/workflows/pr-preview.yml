name: PR Preview (PDF + ATS on preview page)

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "resume*.tex"
      - "resume*.cls"
      - ".github/workflows/**"
      # If you also want rebuilds when JD changes in the PR branch, uncomment:
      # - "job-description.txt"

permissions:
  contents: write
  pull-requests: write

env:
  # <<< CHANGE THIS if your LaTeX root file is different >>>
  ROOT_TEX: resume_faangpath.tex

  # Previews live under this folder on the Pages branch
  PREVIEWS_DIR: previews

  # Paths (inside the Pages branch) for ATS role + preview template
  ATS_ROLE_FILE: ci/ats-pro/roles/backend-java.json
  PREVIEW_TEMPLATE: ci/preview-template.html

  # ATS strictness (this preview job won't fail on score; it's just for display)
  ATS_MIN_SCORE: "78"
  ATS_MIN_REQUIRED_SKILLS_COVERAGE: "0.85"

concurrency:
  group: pr-preview-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  pr-preview:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR branch (resume source)
        uses: actions/checkout@v4

      # Pull JD from main so PRs always evaluate against canonical JD
      - name: Checkout main (job-description.txt)
        uses: actions/checkout@v4
        with:
          ref: main
          path: jd
          sparse-checkout: |
            job-description.txt
          sparse-checkout-cone: true

      # Build the resume PDF (what ATS & reviewers will see)
      - name: Build resume PDF
        uses: xu-cheng/latex-action@v3
        with:
          root_file: ${{ env.ROOT_TEX }}

      # Figure out which Pages branch exists: gh_pages or gh-pages
      - name: Resolve Pages branch name
        id: pages
        shell: bash
        run: |
          set -e
          if git ls-remote --exit-code --heads origin gh_pages >/dev/null 2>&1; then
            echo "ref=gh_pages" >> "$GITHUB_OUTPUT"
          elif git ls-remote --exit-code --heads origin gh-pages >/dev/null 2>&1; then
            echo "ref=gh-pages" >> "$GITHUB_OUTPUT"
          else
            echo "No Pages branch found (expected 'gh_pages' or 'gh-pages')."
            exit 1
          fi

      # Bring in ATS code and the preview HTML template from the Pages branch
      - name: Checkout Pages branch (ATS code + template)
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.pages.outputs.ref }}
          path: ops

      # Optional speed-up for embeddings/models
      - name: Cache pip & HF models
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pip
            ~/.cache/huggingface
          key: ${{ runner.os }}-atspro-${{ hashFiles('ops/ci/ats-pro/requirements.txt') }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install ATS dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ops/ci/ats-pro/requirements.txt
          python -c "import nltk; nltk.download('punkt', quiet=True)"

      # Run strict ATS analyzer but don't fail this preview job;
      # the “blocking” version (if desired) should live in a separate workflow.
      - name: Run ATS analysis (non-blocking)
        shell: bash
        continue-on-error: true
        run: |
          python ops/ci/ats-pro/ats_pro.py \
            --pdf "${{ env.ROOT_TEX }}".pdf \
            --tex "${{ env.ROOT_TEX }}" \
            --jd  "jd/job-description.txt" \
            --role "ops/${{ env.ATS_ROLE_FILE }}" \
            --out-json "ats-pro-report.json" \
            --out-md   "ats-pro-report.md" \
            --min-score "${{ env.ATS_MIN_SCORE }}" \
            --min-req-coverage "${{ env.ATS_MIN_REQUIRED_SKILLS_COVERAGE }}"

      # Prepare/update the per-PR preview folder in the Pages branch
      - name: Checkout Pages branch to publish preview
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.pages.outputs.ref }}
          path: site

      - name: Copy files into preview folder
        id: prep
        shell: bash
        run: |
          PR="${{ github.event.pull_request.number }}"
          PREVIEW_DIR="${{ env.PREVIEWS_DIR }}/pr-${PR}"
          mkdir -p "site/${PREVIEW_DIR}"

          # Copy compiled resume + ATS report + HTML template
          cp "${{ env.ROOT_TEX }}.pdf" "site/${PREVIEW_DIR}/resume.pdf"
          cp "ats-pro-report.json" "site/${PREVIEW_DIR}/ats-pro-report.json" || true
          cp "ops/${{ env.PREVIEW_TEMPLATE }}" "site/${PREVIEW_DIR}/index.html"

          echo "preview_dir=${PREVIEW_DIR}" >> "$GITHUB_OUTPUT"

      - name: Commit & push preview
        working-directory: site
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "PR preview: #${{ github.event.pull_request.number }} @ $GITHUB_SHA" || echo "No changes to commit"
          git push origin ${{ steps.pages.outputs.ref }}

      # Idempotent PR comment with the preview URL
      - name: Find prior preview comment
        id: find-comment
        uses: peter-evans/find-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: 'Live PR Preview (with ATS)'

      - name: Create or update PR comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ### 📄 Live PR Preview (with ATS)
            - **URL:** https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ steps.prep.outputs.preview_dir }}/
            - The page shows your compiled **PDF** and the **ATS score**/breakdown side-by-side.
          edit-mode: replace
