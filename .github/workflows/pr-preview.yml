name: PR Preview (PDF only)

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "resume*.tex"
      - "resume*.cls"
      - ".github/workflows/pr-preview.yml"
      - "job-description.txt"
      - "jd/job-description.txt"

permissions:
  contents: write

env:
  ROOT_TEX: resume_faangpath.tex
  SITE_BRANCH: gh-pages
  PREVIEW_TEMPLATE_PATH_IN_SITE_BRANCH: ci/preview-template.html

concurrency:
  group: pr-preview-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  pr-preview:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout main (for template)
        uses: actions/checkout@v4
        with:
          ref: main
          path: main

      - name: Checkout PR (resume source)
        uses: actions/checkout@v4
        with:
          path: pr

      - name: Add LaTeX problem matcher
        # Use a file (more reliable than inline JSON)
        run: |
          cat > .github_latex_matcher.json <<'JSON'
          { "problemMatcher": [
            { "owner": "latex",
              "pattern": [ { "regexp": "^(LaTeX Warning|! LaTeX Error): (.*)$", "message": 2 } ]
            }
          ] }
          JSON
          echo "::add-matcher::.github_latex_matcher.json"

      - name: Build resume PDF
        uses: xu-cheng/latex-action@v3
        timeout-minutes: 8
        with:
          root_file: ${{ env.ROOT_TEX }}
          working_directory: pr

      - name: Resolve Filenames
        id: names
        shell: bash
        run: |
          set -euo pipefail
          BASE_NAME="${ROOT_TEX%.tex}"
          echo "pdf_path=pr/${BASE_NAME}.pdf" >> "$GITHUB_OUTPUT"

      - name: Upload resume.pdf artifact (for ATS workflow)
        uses: actions/upload-artifact@v4
        with:
          name: resume-pdf
          path: ${{ steps.names.outputs.pdf_path }}
          retention-days: 5

      - name: Checkout Pages branch
        uses: actions/checkout@v4
        with:
          ref: ${{ env.SITE_BRANCH }}
          path: site
          fetch-depth: 0

      - name: Copy files into preview folder
        id: prep
        shell: bash
        run: |
          set -euo pipefail
          PREVIEW_DIR="previews/pr-${{ github.event.pull_request.number }}"
          mkdir -p "site/${PREVIEW_DIR}"
          cp "${{ steps.names.outputs.pdf_path }}" "site/${PREVIEW_DIR}/resume.pdf"
          cp "site/${{ env.PREVIEW_TEMPLATE_PATH_IN_SITE_BRANCH }}" "site/${PREVIEW_DIR}/index.html"
          date -u -Iseconds > "site/${PREVIEW_DIR}/.built_at"
          echo "preview_url_path=${PREVIEW_DIR}" >> "$GITHUB_OUTPUT"

          # cache-bust assets in index.html
          BUILT_AT="$(cat site/${PREVIEW_DIR}/.built_at)"
          for f in "resume.pdf"; do
            if grep -q "$f" "site/${PREVIEW_DIR}/index.html"; then
              sed -i "s|\(${f}\)\([\"')]\)|\1?b=${BUILT_AT}\2|g" "site/${PREVIEW_DIR}/index.html"
            fi
          done

      - name: Commit & push preview
        working-directory: site
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "Deploy preview for PR #${{ github.event.pull_request.number }}" || echo "No changes to commit"
          git push origin ${{ env.SITE_BRANCH }}

      - name: Summarize Preview
        run: |
          {
            echo "## PR Preview"
            echo ""
            echo "- URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/${{ steps.prep.outputs.preview_url_path }}/"
          } >> $GITHUB_STEP_SUMMARY
