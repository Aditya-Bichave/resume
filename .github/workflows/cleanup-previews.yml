name: Cleanup old PR previews

on:
  schedule:
    - cron: "17 1 * * *"   # daily at 01:17 UTC
  workflow_dispatch:

permissions:
  contents: write

env:
  SITE_BRANCH: gh-pages
  PREVIEWS_DIR: previews
  TTL_DAYS: 5

jobs:
  cleanup:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: ${{ env.SITE_BRANCH }}
          fetch-depth: 0

      - name: Delete previews older than TTL (hardened)
        shell: bash
        run: |
          set -euo pipefail
          ttl_secs=$(( TTL_DAYS * 24 * 3600 ))
          now=$(date -u +%s)
          removed=0
          max_remove=50
          if [ -d "$PREVIEWS_DIR" ]; then
            for d in "$PREVIEWS_DIR"/pr-*; do
              [ -d "$d" ] || continue
              case "$d" in
                "$PREVIEWS_DIR"/pr-[0-9]*) ;;
                *) echo "Skip suspicious path: $d"; continue ;;
              esac
              if [ -f "$d/.built_at" ]; then
                built=$(date -u -d "$(cat "$d/.built_at")" +%s 2>/dev/null || echo 0)
              else
                built=$(git log -1 --format=%ct -- "$d" 2>/dev/null || echo 0)
              fi
              age=$(( now - built ))
              if [ "$age" -gt "$ttl_secs" ]; then
                echo "Removing $d (age ${age}s > ${ttl_secs}s)"
                git rm -r -- "$d"
                removed=$((removed+1))
                [ "$removed" -ge "$max_remove" ] && { echo "Hit deletion cap ($max_remove), stopping"; break; }
              fi
            done
          fi
          if [ "$removed" -gt 0 ]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git commit -m "Cleanup ${removed} old PR previews (> ${TTL_DAYS} days)"
            git push origin "$SITE_BRANCH"
          else
            echo "Nothing to remove."
          fi
